{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/xwiper/index.js","src/modules/Game.class.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $350b59c80a2f17d9$exports = {};\n\"use strict\";\nfunction $350b59c80a2f17d9$var$ownKeys(a, b) {\n    var c = Object.keys(a);\n    if (Object.getOwnPropertySymbols) {\n        var d = Object.getOwnPropertySymbols(a);\n        b && (d = d.filter(function(b) {\n            return Object.getOwnPropertyDescriptor(a, b).enumerable;\n        })), c.push.apply(c, d);\n    }\n    return c;\n}\nfunction $350b59c80a2f17d9$var$_objectSpread(a) {\n    for(var b, c = 1; c < arguments.length; c++)b = null == arguments[c] ? {} : arguments[c], c % 2 ? $350b59c80a2f17d9$var$ownKeys(Object(b), !0).forEach(function(c) {\n        $350b59c80a2f17d9$var$_defineProperty(a, c, b[c]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : $350b59c80a2f17d9$var$ownKeys(Object(b)).forEach(function(c) {\n        Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c));\n    });\n    return a;\n}\nfunction $350b59c80a2f17d9$var$_defineProperty(a, b, c) {\n    return b in a ? Object.defineProperty(a, b, {\n        value: c,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : a[b] = c, a;\n}\nconst $350b59c80a2f17d9$var$defaults = {\n    threshold: 50,\n    passive: !1\n};\nclass $350b59c80a2f17d9$var$Xwiper {\n    constructor(a, b = {}){\n        this.options = $350b59c80a2f17d9$var$_objectSpread($350b59c80a2f17d9$var$_objectSpread({}, $350b59c80a2f17d9$var$defaults), b), this.element = null, this.touchStartX = 0, this.touchStartY = 0, this.touchEndX = 0, this.touchEndY = 0, this.onSwipeLeftAgent = null, this.onSwipeRightAgent = null, this.onSwipeUpAgent = null, this.onSwipeDownAgent = null, this.onTapAgent = null, this.onTouchStart = this.onTouchStart.bind(this), this.onTouchEnd = this.onTouchEnd.bind(this), this.onSwipeLeft = this.onSwipeLeft.bind(this), this.onSwipeRight = this.onSwipeRight.bind(this), this.onSwipeUp = this.onSwipeUp.bind(this), this.onSwipeDown = this.onSwipeDown.bind(this), this.onTap = this.onTap.bind(this), this.destroy = this.destroy.bind(this), this.handleGesture = this.handleGesture.bind(this);\n        let c = !!this.options.passive && {\n            passive: !0\n        };\n        this.element = a instanceof EventTarget ? a : document.querySelector(a), this.element.addEventListener(\"touchstart\", this.onTouchStart, c), this.element.addEventListener(\"touchend\", this.onTouchEnd, c);\n    }\n    onTouchStart(a) {\n        this.touchStartX = a.changedTouches[0].screenX, this.touchStartY = a.changedTouches[0].screenY;\n    }\n    onTouchEnd(a) {\n        this.touchEndX = a.changedTouches[0].screenX, this.touchEndY = a.changedTouches[0].screenY, this.handleGesture();\n    }\n    onSwipeLeft(a) {\n        this.onSwipeLeftAgent = a;\n    }\n    onSwipeRight(a) {\n        this.onSwipeRightAgent = a;\n    }\n    onSwipeUp(a) {\n        this.onSwipeUpAgent = a;\n    }\n    onSwipeDown(a) {\n        this.onSwipeDownAgent = a;\n    }\n    onTap(a) {\n        this.onTapAgent = a;\n    }\n    destroy() {\n        this.element.removeEventListener(\"touchstart\", this.onTouchStart), this.element.removeEventListener(\"touchend\", this.onTouchEnd);\n    }\n    handleGesture() {\n        return this.touchEndX + this.options.threshold <= this.touchStartX ? (this.onSwipeLeftAgent && this.onSwipeLeftAgent(), \"swiped left\") : this.touchEndX - this.options.threshold >= this.touchStartX ? (this.onSwipeRightAgent && this.onSwipeRightAgent(), \"swiped right\") : this.touchEndY + this.options.threshold <= this.touchStartY ? (this.onSwipeUpAgent && this.onSwipeUpAgent(), \"swiped up\") : this.touchEndY - this.options.threshold >= this.touchStartY ? (this.onSwipeDownAgent && this.onSwipeDownAgent(), \"swiped down\") : this.touchEndY === this.touchStartY ? (this.onTapAgent && this.onTapAgent(), \"tap\") : void 0;\n    }\n}\n$350b59c80a2f17d9$exports = $350b59c80a2f17d9$var$Xwiper;\n\n\n\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ class $a5fd07fa01589658$var$Game {\n    /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ constructor(initialState){\n        if (initialState) {\n            this.state = initialState;\n            this.startState = initialState;\n        } else {\n            this.state = [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ];\n            this.startState = [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ];\n        }\n        this.status = \"idle\";\n        this.score = 0;\n    // eslint-disable-next-line no-console\n    }\n    moveLeft() {\n        const stateBeforeMove = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const stateToModify = [\n            [],\n            [],\n            [],\n            []\n        ];\n        if (this.getStatus() === \"playing\") {\n            for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n                stateBeforeMove[i][j] = this.getState()[i][j];\n                stateToModify[i][j] = this.getState()[i][j];\n            }\n            const mLeft = (row)=>{\n                for(let j = 0; j < 4; j++){\n                    for(let k = 0; k < 3; k++)if (row[k] === 0) {\n                        row[k] = row[k + 1];\n                        row[k + 1] = 0;\n                    }\n                }\n            };\n            for(let i = 0; i < 4; i++){\n                const row = stateToModify[i];\n                mLeft(row);\n                for(let j = 0; j < 3; j++)if (row[j] === row[j + 1]) {\n                    row[j] = row[j] * 2;\n                    row[j + 1] = 0;\n                    this.setScore(row[j]);\n                }\n                mLeft(row);\n                stateToModify[i] = row;\n            }\n            if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) this.createNewCell(stateToModify);\n            this.checkLose();\n            this.checkWin();\n        }\n    }\n    moveRight() {\n        const stateBeforeMove = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const stateToModify = [\n            [],\n            [],\n            [],\n            []\n        ];\n        if (this.getStatus() === \"playing\") {\n            for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n                stateBeforeMove[i][j] = this.getState()[i][j];\n                stateToModify[i][j] = this.getState()[i][j];\n            }\n            const mRight = (row)=>{\n                for(let j = 3; j >= 0; j--){\n                    for(let k = 3; k > 0; k--)if (row[k] === 0) {\n                        row[k] = row[k - 1];\n                        row[k - 1] = 0;\n                    }\n                }\n            };\n            for(let i = 0; i < 4; i++){\n                const row = stateToModify[i];\n                mRight(row);\n                for(let j = 3; j >= 0; j--)if (row[j] === row[j - 1]) {\n                    row[j] = row[j] * 2;\n                    row[j - 1] = 0;\n                    this.setScore(row[j]);\n                }\n                mRight(row);\n                stateToModify[i] = row;\n            }\n            if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) this.createNewCell(stateToModify);\n            this.checkLose();\n            this.checkWin();\n        }\n    }\n    moveUp() {\n        const stateToModify = [\n            [],\n            [],\n            [],\n            []\n        ];\n        function mUp(column) {\n            for(let i = 0; i < 4; i++){\n                for(let j = 0; j < 3; j++)if (column[j] === 0) {\n                    column[j] = column[j + 1];\n                    column[j + 1] = 0;\n                }\n            }\n        }\n        if (this.getStatus() === \"playing\") {\n            for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)stateToModify[i][j] = this.getState()[i][j];\n            for(let i = 0; i < 4; i++){\n                const column = [];\n                for(let j = 0; j < 4; j++)column[j] = stateToModify[j][i];\n                mUp(column);\n                for(let j = 0; j < 3; j++)if (column[j] === column[j + 1]) {\n                    column[j] = column[j] * 2;\n                    column[j + 1] = 0;\n                    this.setScore(column[j]);\n                }\n                mUp(column);\n                for(let j = 0; j < 4; j++)stateToModify[j][i] = column[j];\n            }\n            if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) this.createNewCell(stateToModify);\n            this.checkLose();\n            this.checkWin();\n        }\n    }\n    moveDown() {\n        const stateToModify = [\n            [],\n            [],\n            [],\n            []\n        ];\n        function mDown(column) {\n            for(let i = 3; i >= 0; i--){\n                for(let j = 3; j > 0; j--)if (column[j] === 0) {\n                    column[j] = column[j - 1];\n                    column[j - 1] = 0;\n                }\n            }\n        }\n        if (this.getStatus() === \"playing\") {\n            for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)stateToModify[i][j] = this.getState()[i][j];\n            for(let i = 0; i < 4; i++){\n                const column = [];\n                for(let j = 0; j < 4; j++)column[j] = stateToModify[j][i];\n                mDown(column);\n                for(let j = 0; j < 3; j++)if (column[j] === column[j + 1]) {\n                    column[j] = column[j] * 2;\n                    column[j + 1] = 0;\n                    this.setScore(column[j]);\n                }\n                mDown(column);\n                for(let j = 0; j < 4; j++)stateToModify[j][i] = column[j];\n            }\n            if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) this.createNewCell(stateToModify);\n            this.checkLose();\n            this.checkWin();\n        }\n    }\n    checkWin() {\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.getState()[i][j] === 2048) this.setStatus(\"win\");\n        }\n    }\n    checkLose() {\n        let numOfUnevenChecks = 0;\n        let numOfFreeFields = 16;\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.getState()[i][j] !== 0) numOfFreeFields--;\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 3; j++)if (this.getState()[i][j] !== this.getState()[i][j + 1]) numOfUnevenChecks++;\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 3; j++)if (this.getState()[j][i] !== this.getState()[j + 1][i]) numOfUnevenChecks++;\n        }\n        if (numOfUnevenChecks === 24 && numOfFreeFields === 0) this.setStatus(\"lose\");\n    }\n    /**\n   * @returns {number}\n   */ getScore() {\n        return this.score;\n    }\n    setScore(newScore) {\n        this.score = this.getScore() + newScore;\n    }\n    resetScore() {\n        this.score = 0;\n    }\n    /**\n   * @returns {number[][]}\n   */ getState() {\n        return this.state;\n    }\n    setState(newState) {\n        this.state = newState;\n    }\n    /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ getStatus() {\n        return this.status;\n    }\n    setStatus(newStatus) {\n        this.status = newStatus;\n    }\n    /**\n   * Starts the game.\n   */ start() {\n        this.setStatus(\"playing\");\n        this.makeNewField();\n    }\n    /**\n   * Resets the game.\n   */ restart() {\n        this.setStatus(\"idle\");\n        this.setState(this.startState);\n        this.resetScore();\n    }\n    makeNewField() {\n        const firstCellValue = $a5fd07fa01589658$var$newCellValueGenerator();\n        const secondCellValue = $a5fd07fa01589658$var$newCellValueGenerator();\n        const flattenedStartState = this.startState.map((innerArray)=>innerArray.slice()).flat(1);\n        const freeCellId = [];\n        for(let i = 0; i < flattenedStartState.length; i++)if (flattenedStartState[i] === 0) freeCellId.push(i);\n        if (freeCellId.length === 0) return;\n        const firstCellPosition = Math.round(Math.random() * (freeCellId.length - 1));\n        let secondCellPosition = Math.round(Math.random() * (freeCellId.length - 1));\n        while(firstCellPosition === secondCellPosition)secondCellPosition = Math.round(Math.random() * freeCellId.length);\n        flattenedStartState[freeCellId[firstCellPosition]] = firstCellValue;\n        flattenedStartState[freeCellId[secondCellPosition]] = secondCellValue;\n        let k = 0;\n        const newState = this.startState.map((innerArray)=>innerArray.slice());\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            newState[i][j] = flattenedStartState[k];\n            k++;\n        }\n        this.setState(newState);\n    }\n    createNewCell(field) {\n        const newCellValue = $a5fd07fa01589658$var$newCellValueGenerator();\n        const state = field.map((innerArray)=>innerArray.slice()).flat(1);\n        const freeCellId = [];\n        for(let i = 0; i < state.length; i++)if (state[i] === 0) freeCellId.push(i);\n        if (freeCellId.length === 0) return;\n        const newCellPosition = Math.round(Math.random() * (freeCellId.length - 1));\n        state[freeCellId[newCellPosition]] = newCellValue;\n        let k = 0;\n        const newState = field.map((innerArray)=>innerArray.slice());\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            newState[i][j] = state[k];\n            k++;\n        }\n        this.setState(newState);\n    }\n}\nconst $a5fd07fa01589658$var$newCellValueGenerator = ()=>{\n    const seed = Math.random() * 10;\n    // probability to make cell with 2 is around 70%\n    // probability to make cell with 4 is around 30%\n    if (seed > 3) return 2;\n    else return 4;\n};\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n// const initialState = [\n//   [2, 4, 8, 16],\n//   [4, 8, 16, 32],\n//   [8, 16, 32, 64],\n//   [16, 32, 64, 0],\n// ];\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$button = document.querySelector(\"button\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nfunction $09e991522ca7e64e$var$renderCells() {\n    const allCells = document.querySelectorAll(\"td\");\n    const flattenedStateToRender = $09e991522ca7e64e$var$game.getState().map((innerArray)=>innerArray.slice()).flat(1);\n    allCells[0].setAttribute(\"class\", \"\");\n    try {\n        for(let i = 0; i < 16; i++){\n            allCells[i].setAttribute(\"class\", \"\");\n            allCells[i].textContent = \"\";\n            if (flattenedStateToRender[i] === 0) allCells[i].classList.add(\"field-cell\");\n            else {\n                allCells[i].classList.add(\"field-cell\");\n                allCells[i].classList.add(`field-cell--${flattenedStateToRender[i]}`);\n                allCells[i].textContent = flattenedStateToRender[i];\n            }\n        }\n    } catch  {}\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$switchOnMove();\n}\nfunction $09e991522ca7e64e$var$restartToStart() {\n    $09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n        $09e991522ca7e64e$var$button.classList.add(\"start\");\n        $09e991522ca7e64e$var$button.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$renderCells();\n        $09e991522ca7e64e$var$startToRestart();\n    });\n}\nfunction $09e991522ca7e64e$var$startToRestart() {\n    $09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n        $09e991522ca7e64e$var$button.classList.remove(\"start\");\n        $09e991522ca7e64e$var$button.classList.add(\"restart\");\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$renderCells();\n        $09e991522ca7e64e$var$restartToStart();\n    });\n}\nfunction $09e991522ca7e64e$var$switchOnMove() {\n    switch($09e991522ca7e64e$var$game.getStatus()){\n        case \"idle\":\n            $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n            $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n            break;\n        case \"playing\":\n            $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n            break;\n        case \"win\":\n            $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n            $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n            break;\n        case \"lose\":\n            $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n            $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n            break;\n        default:\n            break;\n    }\n}\n$09e991522ca7e64e$var$renderCells();\n$09e991522ca7e64e$var$startToRestart();\ndocument.querySelector(\"html\").addEventListener(\"keydown\", (e)=>{\n    switch(e.key){\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n    }\n    $09e991522ca7e64e$var$renderCells();\n});\ndocument.querySelector(\".move-up\").addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$game.moveUp();\n    $09e991522ca7e64e$var$renderCells();\n});\ndocument.querySelector(\".move-down\").addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$game.moveDown();\n    $09e991522ca7e64e$var$renderCells();\n});\ndocument.querySelector(\".move-left\").addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$game.moveLeft();\n    $09e991522ca7e64e$var$renderCells();\n});\ndocument.querySelector(\".move-right\").addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$game.moveRight();\n    $09e991522ca7e64e$var$renderCells();\n});\nconst $09e991522ca7e64e$var$slider = document.querySelector(\"html\");\nconst $09e991522ca7e64e$var$xwiper = new (0, (/*@__PURE__*/$parcel$interopDefault($350b59c80a2f17d9$exports)))($09e991522ca7e64e$var$slider);\n$09e991522ca7e64e$var$xwiper.onSwipeUp(()=>{\n    $09e991522ca7e64e$var$game.moveUp();\n    $09e991522ca7e64e$var$renderCells();\n});\n$09e991522ca7e64e$var$xwiper.onSwipeDown(()=>{\n    $09e991522ca7e64e$var$game.moveDown();\n    $09e991522ca7e64e$var$renderCells();\n});\n$09e991522ca7e64e$var$xwiper.onSwipeLeft(()=>{\n    $09e991522ca7e64e$var$game.moveLeft();\n    $09e991522ca7e64e$var$renderCells();\n});\n$09e991522ca7e64e$var$xwiper.onSwipeRight(()=>{\n    $09e991522ca7e64e$var$game.moveRight();\n    $09e991522ca7e64e$var$renderCells();\n});\n\n\n//# sourceMappingURL=index.2a59689e.js.map\n","'use strict';\n\nimport Xwiper from 'xwiper';\n\nconst Game = require('../modules/Game.class');\n// const initialState = [\n//   [2, 4, 8, 16],\n//   [4, 8, 16, 32],\n//   [8, 16, 32, 64],\n//   [16, 32, 64, 0],\n// ];\nconst game = new Game();\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('button');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nfunction renderCells() {\n  const allCells = document.querySelectorAll('td');\n\n  const flattenedStateToRender = game\n    .getState()\n    .map((innerArray) => innerArray.slice())\n    .flat(1);\n\n  allCells[0].setAttribute('class', '');\n\n  try {\n    for (let i = 0; i < 16; i++) {\n      allCells[i].setAttribute('class', '');\n      allCells[i].textContent = '';\n\n      if (flattenedStateToRender[i] === 0) {\n        allCells[i].classList.add('field-cell');\n      } else {\n        allCells[i].classList.add('field-cell');\n        allCells[i].classList.add(`field-cell--${flattenedStateToRender[i]}`);\n        allCells[i].textContent = flattenedStateToRender[i];\n      }\n    }\n  } catch {}\n  score.textContent = game.getScore();\n  switchOnMove();\n}\n\nfunction restartToStart() {\n  button.addEventListener('click', () => {\n    button.classList.add('start');\n    button.classList.remove('restart');\n\n    game.restart();\n    renderCells();\n    startToRestart();\n  });\n}\n\nfunction startToRestart() {\n  button.addEventListener('click', () => {\n    button.classList.remove('start');\n    button.classList.add('restart');\n\n    game.start();\n    renderCells();\n    restartToStart();\n  });\n}\n\nfunction switchOnMove() {\n  switch (game.getStatus()) {\n    case 'idle':\n      startMessage.classList.remove('hidden');\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n      break;\n\n    case 'playing':\n      startMessage.classList.add('hidden');\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n      break;\n\n    case 'win':\n      startMessage.classList.add('hidden');\n      winMessage.classList.remove('hidden');\n      loseMessage.classList.add('hidden');\n      break;\n\n    case 'lose':\n      startMessage.classList.add('hidden');\n      winMessage.classList.add('hidden');\n      loseMessage.classList.remove('hidden');\n      break;\n\n    default:\n      break;\n  }\n}\nrenderCells();\nstartToRestart();\n\ndocument.querySelector('html').addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      game.moveLeft();\n\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n\n  renderCells();\n});\n\ndocument.querySelector('.move-up').addEventListener('click', () => {\n  game.moveUp();\n  renderCells();\n});\n\ndocument.querySelector('.move-down').addEventListener('click', () => {\n  game.moveDown();\n  renderCells();\n});\n\ndocument.querySelector('.move-left').addEventListener('click', () => {\n  game.moveLeft();\n  renderCells();\n});\n\ndocument.querySelector('.move-right').addEventListener('click', () => {\n  game.moveRight();\n  renderCells();\n});\n\nconst slider = document.querySelector('html');\nconst xwiper = new Xwiper(slider);\n\nxwiper.onSwipeUp(() => {\n  game.moveUp();\n  renderCells();\n});\n\nxwiper.onSwipeDown(() => {\n  game.moveDown();\n  renderCells();\n});\n\nxwiper.onSwipeLeft(() => {\n  game.moveLeft();\n  renderCells();\n});\n\nxwiper.onSwipeRight(() => {\n  game.moveRight();\n  renderCells();\n});\n","\"use strict\";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}const defaults={threshold:50,passive:!1};class Xwiper{constructor(a,b={}){this.options=_objectSpread(_objectSpread({},defaults),b),this.element=null,this.touchStartX=0,this.touchStartY=0,this.touchEndX=0,this.touchEndY=0,this.onSwipeLeftAgent=null,this.onSwipeRightAgent=null,this.onSwipeUpAgent=null,this.onSwipeDownAgent=null,this.onTapAgent=null,this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onSwipeLeft=this.onSwipeLeft.bind(this),this.onSwipeRight=this.onSwipeRight.bind(this),this.onSwipeUp=this.onSwipeUp.bind(this),this.onSwipeDown=this.onSwipeDown.bind(this),this.onTap=this.onTap.bind(this),this.destroy=this.destroy.bind(this),this.handleGesture=this.handleGesture.bind(this);let c=!!this.options.passive&&{passive:!0};this.element=a instanceof EventTarget?a:document.querySelector(a),this.element.addEventListener(\"touchstart\",this.onTouchStart,c),this.element.addEventListener(\"touchend\",this.onTouchEnd,c)}onTouchStart(a){this.touchStartX=a.changedTouches[0].screenX,this.touchStartY=a.changedTouches[0].screenY}onTouchEnd(a){this.touchEndX=a.changedTouches[0].screenX,this.touchEndY=a.changedTouches[0].screenY,this.handleGesture()}onSwipeLeft(a){this.onSwipeLeftAgent=a}onSwipeRight(a){this.onSwipeRightAgent=a}onSwipeUp(a){this.onSwipeUpAgent=a}onSwipeDown(a){this.onSwipeDownAgent=a}onTap(a){this.onTapAgent=a}destroy(){this.element.removeEventListener(\"touchstart\",this.onTouchStart),this.element.removeEventListener(\"touchend\",this.onTouchEnd)}handleGesture(){return this.touchEndX+this.options.threshold<=this.touchStartX?(this.onSwipeLeftAgent&&this.onSwipeLeftAgent(),\"swiped left\"):this.touchEndX-this.options.threshold>=this.touchStartX?(this.onSwipeRightAgent&&this.onSwipeRightAgent(),\"swiped right\"):this.touchEndY+this.options.threshold<=this.touchStartY?(this.onSwipeUpAgent&&this.onSwipeUpAgent(),\"swiped up\"):this.touchEndY-this.options.threshold>=this.touchStartY?(this.onSwipeDownAgent&&this.onSwipeDownAgent(),\"swiped down\"):this.touchEndY===this.touchStartY?(this.onTapAgent&&this.onTapAgent(),\"tap\"):void 0}}module.exports=Xwiper;","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    if (initialState) {\n      this.state = initialState;\n      this.startState = initialState;\n    } else {\n      this.state = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n\n      this.startState = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n    }\n    this.status = 'idle';\n    this.score = 0;\n    // eslint-disable-next-line no-console\n  }\n\n  moveLeft() {\n    const stateBeforeMove = [[], [], [], []];\n    const stateToModify = [[], [], [], []];\n\n    if (this.getStatus() === 'playing') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          stateBeforeMove[i][j] = this.getState()[i][j];\n          stateToModify[i][j] = this.getState()[i][j];\n        }\n      }\n\n      const mLeft = (row) => {\n        for (let j = 0; j < 4; j++) {\n          for (let k = 0; k < 3; k++) {\n            if (row[k] === 0) {\n              row[k] = row[k + 1];\n              row[k + 1] = 0;\n            }\n          }\n        }\n      };\n\n      for (let i = 0; i < 4; i++) {\n        const row = stateToModify[i];\n\n        mLeft(row);\n\n        for (let j = 0; j < 3; j++) {\n          if (row[j] === row[j + 1]) {\n            row[j] = row[j] * 2;\n            row[j + 1] = 0;\n\n            this.setScore(row[j]);\n          }\n        }\n        mLeft(row);\n\n        stateToModify[i] = row;\n      }\n\n      if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) {\n        this.createNewCell(stateToModify);\n      }\n      this.checkLose();\n      this.checkWin();\n    }\n  }\n  moveRight() {\n    const stateBeforeMove = [[], [], [], []];\n    const stateToModify = [[], [], [], []];\n\n    if (this.getStatus() === 'playing') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          stateBeforeMove[i][j] = this.getState()[i][j];\n          stateToModify[i][j] = this.getState()[i][j];\n        }\n      }\n\n      const mRight = (row) => {\n        for (let j = 3; j >= 0; j--) {\n          for (let k = 3; k > 0; k--) {\n            if (row[k] === 0) {\n              row[k] = row[k - 1];\n              row[k - 1] = 0;\n            }\n          }\n        }\n      };\n\n      for (let i = 0; i < 4; i++) {\n        const row = stateToModify[i];\n\n        mRight(row);\n\n        for (let j = 3; j >= 0; j--) {\n          if (row[j] === row[j - 1]) {\n            row[j] = row[j] * 2;\n            row[j - 1] = 0;\n\n            this.setScore(row[j]);\n          }\n        }\n        mRight(row);\n\n        stateToModify[i] = row;\n      }\n\n      if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) {\n        this.createNewCell(stateToModify);\n      }\n      this.checkLose();\n      this.checkWin();\n    }\n  }\n  moveUp() {\n    const stateToModify = [[], [], [], []];\n\n    function mUp(column) {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (column[j] === 0) {\n            column[j] = column[j + 1];\n            column[j + 1] = 0;\n          }\n        }\n      }\n    }\n\n    if (this.getStatus() === 'playing') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          stateToModify[i][j] = this.getState()[i][j];\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        const column = [];\n\n        for (let j = 0; j < 4; j++) {\n          column[j] = stateToModify[j][i];\n        }\n        mUp(column);\n\n        for (let j = 0; j < 3; j++) {\n          if (column[j] === column[j + 1]) {\n            column[j] = column[j] * 2;\n            column[j + 1] = 0;\n            this.setScore(column[j]);\n          }\n        }\n\n        mUp(column);\n\n        for (let j = 0; j < 4; j++) {\n          stateToModify[j][i] = column[j];\n        }\n      }\n\n      if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) {\n        this.createNewCell(stateToModify);\n      }\n      this.checkLose();\n      this.checkWin();\n    }\n  }\n  moveDown() {\n    const stateToModify = [[], [], [], []];\n\n    function mDown(column) {\n      for (let i = 3; i >= 0; i--) {\n        for (let j = 3; j > 0; j--) {\n          if (column[j] === 0) {\n            column[j] = column[j - 1];\n            column[j - 1] = 0;\n          }\n        }\n      }\n    }\n\n    if (this.getStatus() === 'playing') {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          stateToModify[i][j] = this.getState()[i][j];\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        const column = [];\n\n        for (let j = 0; j < 4; j++) {\n          column[j] = stateToModify[j][i];\n        }\n        mDown(column);\n\n        for (let j = 0; j < 3; j++) {\n          if (column[j] === column[j + 1]) {\n            column[j] = column[j] * 2;\n            column[j + 1] = 0;\n\n            this.setScore(column[j]);\n          }\n        }\n\n        mDown(column);\n\n        for (let j = 0; j < 4; j++) {\n          stateToModify[j][i] = column[j];\n        }\n      }\n\n      if (JSON.stringify(this.getState()) !== JSON.stringify(stateToModify)) {\n        this.createNewCell(stateToModify);\n      }\n      this.checkLose();\n      this.checkWin();\n    }\n  }\n\n  checkWin() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.getState()[i][j] === 2048) {\n          this.setStatus('win');\n        }\n      }\n    }\n  }\n\n  checkLose() {\n    let numOfUnevenChecks = 0;\n    let numOfFreeFields = 16;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.getState()[i][j] !== 0) {\n          numOfFreeFields--;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (this.getState()[i][j] !== this.getState()[i][j + 1]) {\n          numOfUnevenChecks++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (this.getState()[j][i] !== this.getState()[j + 1][i]) {\n          numOfUnevenChecks++;\n        }\n      }\n    }\n\n    if (numOfUnevenChecks === 24 && numOfFreeFields === 0) {\n      this.setStatus('lose');\n    }\n  }\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  setScore(newScore) {\n    this.score = this.getScore() + newScore;\n  }\n\n  resetScore() {\n    this.score = 0;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  setState(newState) {\n    this.state = newState;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  setStatus(newStatus) {\n    this.status = newStatus;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.setStatus('playing');\n    this.makeNewField();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.setStatus('idle');\n    this.setState(this.startState);\n    this.resetScore();\n  }\n\n  makeNewField() {\n    const firstCellValue = newCellValueGenerator();\n    const secondCellValue = newCellValueGenerator();\n    const flattenedStartState = this.startState\n      .map((innerArray) => innerArray.slice())\n      .flat(1);\n    const freeCellId = [];\n\n    for (let i = 0; i < flattenedStartState.length; i++) {\n      if (flattenedStartState[i] === 0) {\n        freeCellId.push(i);\n      }\n    }\n\n    if (freeCellId.length === 0) {\n      return;\n    }\n\n    const firstCellPosition = Math.round(\n      Math.random() * (freeCellId.length - 1),\n    );\n    let secondCellPosition = Math.round(\n      Math.random() * (freeCellId.length - 1),\n    );\n\n    while (firstCellPosition === secondCellPosition) {\n      secondCellPosition = Math.round(Math.random() * freeCellId.length);\n    }\n\n    flattenedStartState[freeCellId[firstCellPosition]] = firstCellValue;\n    flattenedStartState[freeCellId[secondCellPosition]] = secondCellValue;\n\n    let k = 0;\n    const newState = this.startState.map((innerArray) => innerArray.slice());\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        newState[i][j] = flattenedStartState[k];\n        k++;\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  createNewCell(field) {\n    const newCellValue = newCellValueGenerator();\n\n    const state = field.map((innerArray) => innerArray.slice()).flat(1);\n    const freeCellId = [];\n\n    for (let i = 0; i < state.length; i++) {\n      if (state[i] === 0) {\n        freeCellId.push(i);\n      }\n    }\n\n    if (freeCellId.length === 0) {\n      return;\n    }\n\n    const newCellPosition = Math.round(Math.random() * (freeCellId.length - 1));\n\n    state[freeCellId[newCellPosition]] = newCellValue;\n\n    let k = 0;\n    const newState = field.map((innerArray) => innerArray.slice());\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        newState[i][j] = state[k];\n        k++;\n      }\n    }\n\n    this.setState(newState);\n  }\n}\n\nconst newCellValueGenerator = () => {\n  const seed = Math.random() * 10;\n\n  // probability to make cell with 2 is around 70%\n  // probability to make cell with 4 is around 30%\n  if (seed > 3) {\n    return 2;\n  } else {\n    return 4;\n  }\n};\n\nmodule.exports = Game;\n"],"names":["a","$350b59c80a2f17d9$exports","$350b59c80a2f17d9$var$ownKeys","b","c","Object","keys","getOwnPropertySymbols","d","filter","getOwnPropertyDescriptor","enumerable","push","apply","$350b59c80a2f17d9$var$_objectSpread","arguments","length","forEach","defineProperty","value","configurable","writable","getOwnPropertyDescriptors","defineProperties","$350b59c80a2f17d9$var$defaults","threshold","passive","constructor","options","element","touchStartX","touchStartY","touchEndX","touchEndY","onSwipeLeftAgent","onSwipeRightAgent","onSwipeUpAgent","onSwipeDownAgent","onTapAgent","onTouchStart","bind","onTouchEnd","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onTap","destroy","handleGesture","EventTarget","document","querySelector","addEventListener","changedTouches","screenX","screenY","removeEventListener","$a5fd07fa01589658$var$newCellValueGenerator","seed","Math","random","$09e991522ca7e64e$var$game","initialState","state","startState","status","score","moveLeft","stateBeforeMove","stateToModify","getStatus","i","j","getState","mLeft","row","k","setScore","JSON","stringify","createNewCell","checkLose","checkWin","moveRight","mRight","moveUp","mUp","column","moveDown","mDown","setStatus","numOfUnevenChecks","numOfFreeFields","getScore","newScore","resetScore","setState","newState","newStatus","start","makeNewField","restart","firstCellValue","secondCellValue","flattenedStartState","map","innerArray","slice","flat","freeCellId","firstCellPosition","round","secondCellPosition","field","newCellValue","newCellPosition","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$button","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$renderCells","allCells","querySelectorAll","flattenedStateToRender","setAttribute","textContent","classList","add","$09e991522ca7e64e$var$switchOnMove","remove","$09e991522ca7e64e$var$startToRestart","e","key","$09e991522ca7e64e$var$slider","$09e991522ca7e64e$var$xwiper","__esModule","default"],"version":3,"file":"index.2a59689e.js.map"}